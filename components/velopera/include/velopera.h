/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef VELOPERA_H
#define VELOPERA_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_CCVS1 (801) /* 0x321 */
#define CAN_ID_COMPASS (802) /* 0x322 */
#define CAN_ID_ENVIRONMENT (803) /* 0x323 */
#define CAN_ID_NET (804) /* 0x324 */

typedef PREPACK struct {
	uint16_t Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint8_t Gear; /* scaling 1.0, offset 0.0, units Gear  */
} POSTPACK can_0x321_CCVS1_t;

/* Compass Readings */
typedef PREPACK struct {
	uint16_t Heading; /* scaling 1.0, offset 0.0, units Degrees  */
} POSTPACK can_0x322_COMPASS_t;

/* Sensor Readings */
typedef PREPACK struct {
	uint16_t Pressure; /* scaling 1.0, offset 0.0, units hPa  */
	int8_t Temp; /* scaling 1.0, offset 0.0, units Â°C  */
	uint8_t Humid; /* scaling 1.0, offset 0.0, units %  */
} POSTPACK can_0x323_ENVIRONMENT_t;

/* GSM Network Info */
typedef PREPACK struct {
	uint8_t Status; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x324_NET_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x321_CCVS1_time_stamp_rx;
	dbcc_time_stamp_t can_0x322_COMPASS_time_stamp_rx;
	dbcc_time_stamp_t can_0x323_ENVIRONMENT_time_stamp_rx;
	dbcc_time_stamp_t can_0x324_NET_time_stamp_rx;
	unsigned can_0x321_CCVS1_status : 2;
	unsigned can_0x321_CCVS1_tx : 1;
	unsigned can_0x321_CCVS1_rx : 1;
	unsigned can_0x322_COMPASS_status : 2;
	unsigned can_0x322_COMPASS_tx : 1;
	unsigned can_0x322_COMPASS_rx : 1;
	unsigned can_0x323_ENVIRONMENT_status : 2;
	unsigned can_0x323_ENVIRONMENT_tx : 1;
	unsigned can_0x323_ENVIRONMENT_rx : 1;
	unsigned can_0x324_NET_status : 2;
	unsigned can_0x324_NET_tx : 1;
	unsigned can_0x324_NET_rx : 1;
	can_0x321_CCVS1_t can_0x321_CCVS1;
	can_0x322_COMPASS_t can_0x322_COMPASS;
	can_0x323_ENVIRONMENT_t can_0x323_ENVIRONMENT;
	can_0x324_NET_t can_0x324_NET;
} POSTPACK can_obj_velopera_h_t;

int unpack_message(can_obj_velopera_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_velopera_h_t *o, const unsigned long id, uint64_t *data);
int print_message(const can_obj_velopera_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x321_Speed(const can_obj_velopera_h_t *o, double *out);
int encode_can_0x321_Speed(can_obj_velopera_h_t *o, double in);
int decode_can_0x321_Gear(const can_obj_velopera_h_t *o, uint8_t *out);
int encode_can_0x321_Gear(can_obj_velopera_h_t *o, uint8_t in);


int decode_can_0x322_Heading(const can_obj_velopera_h_t *o, uint16_t *out);
int encode_can_0x322_Heading(can_obj_velopera_h_t *o, uint16_t in);


int decode_can_0x323_Pressure(const can_obj_velopera_h_t *o, uint16_t *out);
int encode_can_0x323_Pressure(can_obj_velopera_h_t *o, uint16_t in);
int decode_can_0x323_Temp(const can_obj_velopera_h_t *o, int8_t *out);
int encode_can_0x323_Temp(can_obj_velopera_h_t *o, int8_t in);
int decode_can_0x323_Humid(const can_obj_velopera_h_t *o, uint8_t *out);
int encode_can_0x323_Humid(can_obj_velopera_h_t *o, uint8_t in);


int decode_can_0x324_Status(const can_obj_velopera_h_t *o, uint8_t *out);
int encode_can_0x324_Status(can_obj_velopera_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
