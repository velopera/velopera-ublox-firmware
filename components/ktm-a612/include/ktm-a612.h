/** CAN message encoder/decoder: automatically generated - do not edit
  * Generated by dbcc: See https://github.com/howerj/dbcc */
#ifndef KTM_A612_H
#define KTM_A612_H

/* If the contents of this file have caused breaking changes for you, you could try using
   an older version of the generator. You can specify this on the command line with
   the -n option. */
#define DBCC_GENERATOR_VERSION (3)

#include <stdint.h>
#include <stdio.h>

#ifdef __cplusplus
extern "C" { 
#endif

#ifndef PREPACK
#define PREPACK
#endif

#ifndef POSTPACK
#define POSTPACK
#endif

#ifndef DBCC_TIME_STAMP
#define DBCC_TIME_STAMP
typedef uint32_t dbcc_time_stamp_t; /* Time stamp for message; you decide on units */
#endif

#ifndef DBCC_STATUS_ENUM
#define DBCC_STATUS_ENUM
typedef enum {
	DBCC_SIG_STAT_UNINITIALIZED_E = 0, /* Message never sent/received */
	DBCC_SIG_STAT_OK_E            = 1, /* Message ok */
	DBCC_SIG_STAT_ERROR_E         = 2, /* Encode/Decode/Timestamp/Any error */
} dbcc_signal_status_e;
#endif

#define CAN_ID_ECU_ENGINE_RPM_AND_OTHERS_617 (288) /* 0x120 */
#define CAN_ID_ECU_ENGINE_TORQUE_INFO_617 (289) /* 0x121 */
#define CAN_ID_ABS_MTC_CONTROL_INFO_617 (296) /* 0x128 */
#define CAN_ID_ECU_GEAR_POS_CLUTCH_SWITCH_636 (297) /* 0x129 */
#define CAN_ID_ABS_STATUS_A612 (298) /* 0x12a */
#define CAN_ID_ABS_WHEEL_AND_DISPLAY_SPEED (301) /* 0x12d */
#define CAN_ID_ABS_WSS_DTC_617 (302) /* 0x12e */
#define CAN_ID_ABS_ANGLE_INFORMATION (303) /* 0x12f */
#define CAN_ID_HBS_STATUS (320) /* 0x140 */
#define CAN_ID_ABS_DRS_RXLD0 (368) /* 0x170 */
#define CAN_ID_LAS_DRS_TXLD1 (372) /* 0x174 */
#define CAN_ID_LAS_DRS_TXLD2 (376) /* 0x178 */
#define CAN_ID_LAS_DRS_TXLD3_6D_SENSOR (380) /* 0x17c */
#define CAN_ID_ABS_PRESSURE_INFO_619 (656) /* 0x290 */
#define CAN_ID_TPMS_INFO (784) /* 0x310 */
#define CAN_ID_ECU_SAC_CONTROL (1024) /* 0x400 */
#define CAN_ID_SAC_STATUS (1040) /* 0x410 */
#define CAN_ID_DASH_METER_INFO_A612 (1104) /* 0x450 */
#define CAN_ID_ECU_HANDSHAKE (1256) /* 0x4e8 */
#define CAN_ID_ELOCK_HANDSHAKE (1257) /* 0x4e9 */
#define CAN_ID_ELOCK_STATUS_617 (1258) /* 0x4ea */
#define CAN_ID_ECU_ENGINE_DATA_617 (1344) /* 0x540 */
#define CAN_ID_DASH_ENGINE_DATA_617 (1345) /* 0x541 */
#define CAN_ID_MCU_STATUS_A612 (1360) /* 0x550 */
#define CAN_ID_DASH_DRIV_SENS_REQ_A612X (1361) /* 0x551 */
#define CAN_ID_DASH_LIGHT_SENS_SAFETY (1362) /* 0x552 */
#define CAN_ID_MCU_HEATING (1376) /* 0x560 */
#define CAN_ID_LCU_STATUS (1424) /* 0x590 */
#define CAN_ID_ABS_FEATURE_CONTROL_617 (1440) /* 0x5a0 */
#define CAN_ID_HLU_FEATURE_CONTROL (1441) /* 0x5a1 */
#define CAN_ID_CCU_FEATURE_CONTROL (1442) /* 0x5a2 */
#define CAN_ID_ECU_FEATURE_CONTROL (1456) /* 0x5b0 */
#define CAN_ID_SCU_FEATURE_CONTROL (1457) /* 0x5b1 */
#define CAN_ID_SCU_STATUS_MESSAGE_A612 (1488) /* 0x5d0 */
#define CAN_ID_DASH_SUSPENSION_REQ_A612 (1489) /* 0x5d1 */
#define CAN_ID_HLU_STATUS_617 (1616) /* 0x650 */
#define CAN_ID_CCU_STATUS_617 (1721) /* 0x6b9 */
#define CAN_ID_MCU_FEATURE_CONTROL (1762) /* 0x6e2 */

typedef PREPACK struct {
	uint16_t ECU_Engine_Rpm; /* scaling 1.0, offset 0.0, units rpm  */
	uint8_t ECU_Accel_Position; /* scaling 0.4, offset 0.0, units %  */
	uint8_t ECU_CRC_120; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Drive_Mode_Response; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Alive_Counter_120; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Accel_Position_Validit; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Kill_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Starter_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Engine_Rpm_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Kill_Switch_Malf_Warni; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x120_ECU_Engine_RPM_and_others_617_t;

typedef PREPACK struct {
	int16_t ECU_Eng_Actual_Torque; /* scaling 0.2, offset 0.0, units Nm  */
	int16_t ECU_Eng_Driver_Request_Torque; /* scaling 0.2, offset 0.0, units Nm  */
	uint8_t ECU_CRC_121; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Alive_Counter_121; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Crank; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Fi_Trq_control_by_MTC; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_MTC_Trq_Req_Refused; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_MTC_Failure; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Eng_Driv_Torq_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Eng_Act_Trq_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_FI_TRQ_control_by_DTC; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_DTC_Trq_Req_Refused; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_DTC_Failure; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_EGS_Dwn_Trq_Exec; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_EGS_Up_Trq_Exec; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x121_ECU_Engine_Torque_Info_617_t;

typedef PREPACK struct {
	int16_t ABS_MTC_Req_Eng_Trq; /* scaling 0.2, offset 0.0, units Nm  */
	int16_t ABS_DTC_Req_Eng_Trq; /* scaling 0.2, offset 0.0, units Nm  */
	uint8_t ABS_CRC_128; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_128; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_Trq_Cont_Mode; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_Mode_Change_Permis; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_EGS_Enable_Info; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x128_ABS_MTC_Control_Info_617_t;

typedef PREPACK struct {
	uint16_t ECU_CC_Target_Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint8_t ECU_CRC_129; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Gear_Position; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Alive_Counter_129; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_CC_Target_Speed_Symbol; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_CC_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Gear_Engaged; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Gear_Position_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Clutch_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Quickshifter_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Quickshifter_Warning; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x129_ECU_Gear_Pos_Clutch_Switch_636_t;

typedef PREPACK struct {
	uint8_t ABS_CRC_12A; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Slip_Adjuster_Value; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_ABS_State; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_State; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_TC_Mode_Response; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_12A; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_System_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_ABS_Mode_Response; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_AWM_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_LC_Condition; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_LC_Count_Down; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_BTM_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MSR_Info; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_ABS_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_ABS_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_ABS_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MTC_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_CABS_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_HHC_Status; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x12a_ABS_Status_A612_t;

typedef PREPACK struct {
	uint16_t ABS_Front_Wheel_Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t ABS_Rear_Wheel_Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t ABS_Display_Front_Wheel_Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint16_t ABS_Display_Rear_Wheel_Speed; /* scaling 0.1, offset 0.0, units km/h  */
	uint8_t ABS_CRC_12D; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_12D; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Front_Wheel_Speed_Val; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Rear_Wheel_Speed_Val; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x12d_ABS_Wheel_and_Display_Speed_t;

typedef PREPACK struct {
	uint8_t ABS_CRC_12E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_12E; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Front_DTC_Type; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Rear_DTC_Type; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Front_Plausi_Test; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Rear_Plausi_Test; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Front_Ohmic_Tested; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_WSS_Rear_Ohmic_Tested; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x12e_ABS_WSS_DTC_617_t;

typedef PREPACK struct {
	int16_t ABS_Lean_Angle; /* scaling 0.1, offset 0.0, units deg  */
	int16_t ABS_Pitch_Info; /* scaling 0.1, offset 0.0, units deg  */
	uint8_t ABS_CRC_12F; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_12F; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Pitch_Info_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Lean_Angle_Validity; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Roll_Over; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Roll_Over_Validity; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x12f_ABS_Angle_Information_t;

typedef PREPACK struct {
	uint8_t HBS_Brightness_Response; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Custom_Right_2_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Custom_Right_1_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Indicator_Right_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Indicator_Off_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Indicator_Left_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_High_Beam_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Horn_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Paddle_DOWN_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Paddle_UP_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_CC_On_Off_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Back_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Center_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Down_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Up_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Left_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HBS_Right_Switch; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x140_HBS_Status_t;

typedef PREPACK struct {
	uint8_t ABS_Request_1; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Request_3; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Request_4; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Ptr_Diag; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_CRC_170; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Request_2; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Msg_Cnt; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x170_ABS_DRS_RxlD0_t;

typedef PREPACK struct {
	uint16_t LAS_Psip1_Yaw_Rate; /* scaling 0.0, offset -163.8, units deg/sec  */
	uint16_t LAS_Ay1; /* scaling 0.0, offset -4.2, units g  */
	uint8_t LAS_Psip1_Ext_Stat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_CRC_174; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Clu_Stat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Psip1_Stat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Msg_Cnt_174; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Ay1_Stat; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x174_LAS_DRS_TxlD1_t;

typedef PREPACK struct {
	uint16_t LAS_Psip3_Roll_Rate; /* scaling 0.0, offset -163.8, units deg/sec  */
	uint16_t LAS_Ax1; /* scaling 0.0, offset -4.2, units g  */
	uint8_t LAS_Clu_Diag; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_CRC_178; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Clu_Stat5; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Psip3v_Stat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Msg_Cnt_178; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Ax1_Stat; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x178_LAS_DRS_TxlD2_t;

typedef PREPACK struct {
	uint16_t LAS_Psip2_Pitch_Rate; /* scaling 0.0, offset -163.8, units deg/sec  */
	uint16_t LAS_Az_Vertical_Acc; /* scaling 0.0, offset -4.2, units g  */
	uint8_t LAS_CRC_17C; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_HW_Index; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Pitch_Rate_Stat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Msg_Cnt_17C; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LAS_Az_Stat; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x17c_LAS_DRS_TxlD3_6D_Sensor_t;

typedef PREPACK struct {
	uint16_t ABS_Front_Wheel_Press; /* scaling 0.1, offset 0.0, units bar  */
	uint16_t ABS_Front_Master_Cyl; /* scaling 0.1, offset 0.0, units bar  */
	uint16_t ABS_Rear_Wheel_Press; /* scaling 0.1, offset 0.0, units bar  */
	uint16_t ABS_Rear_Master_Cyl; /* scaling 0.1, offset 0.0, units bar  */
	uint8_t ABS_CRC_290; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_290; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Rear_Master_Cyl_Valid; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Front_Master_Cyl_Valid; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Rear_Wheel_Press_Valid; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Front_Wheel_Press_Vali; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x290_ABS_Pressure_Info_619_t;

typedef PREPACK struct {
	uint8_t TPMS_Pressure_Front; /* scaling 20.0, offset 0.0, units mbar  */
	uint8_t TPMS_Pressure_Rear; /* scaling 20.0, offset 0.0, units mbar  */
	uint8_t TPMS_Temperature_Front; /* scaling 1.0, offset -50.0, units degC  */
	uint8_t TPMS_Temperature_Rear; /* scaling 1.0, offset -50.0, units degC  */
	uint8_t TPMS_Press_FR_Low_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Press_FR_High_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Puncture_FR_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Bat_Stat_FR_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_General_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Fr_Sens_Missing_Warni; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Press_RE_Low_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Press_RE_High_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Puncture_RE_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Bat_Stat_RE_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t TPMS_Re_Sens_Missing_Warni; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x310_TPMS_Info_t;

typedef PREPACK struct {
	uint8_t ECU_Target_Opening; /* scaling 1.0, offset 0.0, units %  */
	uint8_t ECU_CRC_400; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Alive_Counter_400; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Actuator_Driv_Stop; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Cranking_Info; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_EXB_Init_Info; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x400_ECU_SAC_Control_t;

typedef PREPACK struct {
	uint8_t SAC_Present_Opening; /* scaling 1.0, offset 0.0, units %  */
	uint8_t SAC_Present_Position; /* scaling 1.4, offset 0.0, units degree  */
	uint8_t SAC_Close_Position; /* scaling 1.4, offset 0.0, units degree  */
	uint8_t SAC_Open_Position; /* scaling 1.4, offset 0.0, units degree  */
	uint8_t SAC_Target_Position; /* scaling 1.4, offset 0.0, units degree  */
	uint8_t SAC_CRC_410; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Alive_Counter_410; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Wire_Adj_Loose; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Communication_Failure; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Sensor_Stuck_Detection; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Diag_Conn_Info; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Under_Exec_Info; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Normal_Operation; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Wire_Adj_Tight; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Wire_Breaking_In_Motor; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Motor_Locking; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Sensor_Failure; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Excess_Heat_Detection; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Excess_Load_Detection; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Excess_Volt_Detection; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SAC_Low_Voltage_Detection; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x410_SAC_Status_t;

typedef PREPACK struct {
	uint16_t DASH_Ambient_Temp; /* scaling 0.1, offset -50.0, units °C  */
	uint8_t DASH_Variant; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_TC_Mode_Request; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_ABS_Mode_Request; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Slip_Adj_Up_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Slip_Adj_Down_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_LC_Release; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_AWM_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_MTC_Off_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_HHC_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Ambient_Temp_Validity; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x450_DASH_Meter_Info_A612_t;

typedef PREPACK struct {
	uint64_t ECU_Handshake; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x4e8_ECU_Handshake_t;

typedef PREPACK struct {
	uint64_t ELOCK_Handshake; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x4e9_ELOCK_Handshake_t;

typedef PREPACK struct {
	uint8_t ELOCK_Key_Bat_Low_Warn; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ELOCK_Key_Missing_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ELOCK_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ELOCK_LED; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x4ea_ELOCK_Status_617_t;

typedef PREPACK struct {
	uint16_t ECU_Fuel_Consumption; /* scaling 0.0, offset 0.0, units ml/sec  */
	int16_t ECU_Water_Temperature; /* scaling 0.1, offset 0.0, units °C  */
	uint8_t ECU_Oil_Temp_Sensor_Data; /* scaling 1.0, offset -50.0, units °C  */
	uint8_t ECU_Low_Oil_Level_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_General_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Side_Stand; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Transport_Lock_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Trans_Temp_Unlock_Warn; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Malfunction_Indica_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Water_Temperature_Vali; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Side_Stand_Validity; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x540_ECU_Engine_Data_617_t;

typedef PREPACK struct {
	uint16_t DASH_After_Start_Time; /* scaling 1.0, offset 0.0, units sec  */
	uint16_t DASH_Restart_Time; /* scaling 1.0, offset 0.0, units sec  */
	uint8_t DASH_CRC_541; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Drive_Mode_Request; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Alive_Counter_541; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Tank_Reserve; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Speed_Measure_Unit; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Quickshifter_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Cc_Set_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Cc_Resume_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Cc_Master_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Cc_Button_Selection; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_After_Start_Time_Vali; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Restart_Time_Validity; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x541_DASH_Engine_Data_617_t;

typedef PREPACK struct {
	uint8_t MCU_Battery_Voltage; /* scaling 0.1, offset 0.0, units Volt  */
	uint8_t MCU_CRC_550; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Fuel_Level_Sensor_Data; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Alive_Counter_550; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_General_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Horn_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Oil_Pressure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Front_Brake_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Rear_Brake_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Blinker_Left_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Blinker_Right_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Blinker_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Battery_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Radiator_Fan_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Fuel_Pump_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Oil_Pressure_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Brake_Lamp_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Front_Brake_Switch_War; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Rear_Brake_Switch_Warn; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Cruise_Control_Cancel; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Cruise_Contr_Not_Canc; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x550_MCU_Status_A612_t;

typedef PREPACK struct {
	uint16_t DASH_Odo_Meter; /* scaling 16.0, offset 0.0, units km  */
	uint8_t DASH_Curve_Light_Test_Requ; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Grip_Heat_Level_Req; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Rider_Heat_Level_Req; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_HBS_Brightness_Reques; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_DRL_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Grip_Installation; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Pillion_Heat_Installa; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Rider_Heat_Installati; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Corded_Headset_Switch; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_BT_Switch; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x551_DASH_Driv_Sens_Req_A612x_t;

typedef PREPACK struct {
	uint8_t DASH_Day_Night_Light_Sens_Safety; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_CRC_552; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Alive_Counter_552; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x552_DASH_Light_Sens_Safety_t;

typedef PREPACK struct {
	uint8_t MCU_Grip_Heat_Level_Res; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Pillion_Heat_Level; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Rider_Heat_Level_Res; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Grip_Heat_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Pillion_Heat_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Pillion_Heat_Sw_Warnin; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Rider_Heat_Warning; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x560_MCU_Heating_t;

typedef PREPACK struct {
	uint8_t LCU_Curve_Light_Test_Respo; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LCU_General_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t LCU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x590_LCU_Status_t;

typedef PREPACK struct {
	uint8_t ABS_CRC_5A0; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Drive_Mode_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Mode_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_TC_MTC_Mode_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Alive_Counter_5A0; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_RSC_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MSR_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_HHC_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_AWM_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_CurveABS_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_BTM_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Slip_Adjuster_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_MOM_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Cruise_Control_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_HBS_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Launch_Control_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ABS_Immo_Bit; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5a0_ABS_Feature_Control_617_t;

typedef PREPACK struct {
	uint8_t HLU_CRC_5A1; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_Alive_Counter_5A1; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_Curve_Light_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_DRL_Feature; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5a1_HLU_Feature_Control_t;

typedef PREPACK struct {
	uint8_t CCU_TbT_Navigation_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Call_In_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Music_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Compass_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_6D_Sensor_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_2nd_Headset_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Call_Out_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_RCM_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_TbT_Plus_Navi_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Corded_Headset_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Map_Navigation_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Interface_Feature; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5a2_CCU_Feature_Control_t;

typedef PREPACK struct {
	uint8_t ECU_CRC_5B0; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Drive_Mode_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Alive_Counter_5B0; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Quickshifter_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Oil_Temp_Lev_Sens_Feat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t ECU_Cruise_Control_Feature; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5b0_ECU_Feature_Control_t;

typedef PREPACK struct {
	uint8_t SCU_CRC_5B1; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Alive_Counter_5B1; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Antidive_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Auto_Damp_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Ext_Damp_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Offroad_Damp_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_EDS_Preload_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Race_Damp_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Manual_Preload_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Auto_Preload_Feature; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5b1_SCU_Feature_Control_t;

typedef PREPACK struct {
	uint8_t SCU_Preload_Resp; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Damp_Shock_Mode_Resp; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Damp_Fork_Mode_Resp; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Suspension_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t SCU_Preload_Adjuster_Warn; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5d0_SCU_Status_Message_A612_t;

typedef PREPACK struct {
	uint8_t DASH_Preload_Req; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Damp_Shock_Mode_Req; /* scaling 1.0, offset 0.0, units none  */
	uint8_t DASH_Damp_Fork_Mode_Req; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x5d1_DASH_Suspension_Req_A612_t;

typedef PREPACK struct {
	uint8_t HLU_DRL_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_DRL_Active; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_High_Beam_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_Low_Beam_Active; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_High_Beam_Lamp_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_Low_Beam_Lamp_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_DRL_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_Front_Pos_Lamp_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t HLU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x650_HLU_Status_617_t;

typedef PREPACK struct {
	uint8_t CCU_BT_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_General_Failure_LED; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_General_Warning; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_MD_Symbol; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Headset2_Symbol; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Headset1_Symbol; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_Corded_Headset_Status; /* scaling 1.0, offset 0.0, units none  */
	uint8_t CCU_BT_Status; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x6b9_CCU_Status_617_t;

typedef PREPACK struct {
	uint8_t MCU_CRC_6E2; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Alive_Counter_6E2; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_Lightdiag_Deact_Feat; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_ATI_Reset_Feature; /* scaling 1.0, offset 0.0, units none  */
	uint8_t MCU_ESI_Feature; /* scaling 1.0, offset 0.0, units none  */
} POSTPACK can_0x6e2_MCU_Feature_Control_t;

typedef PREPACK struct {
	dbcc_time_stamp_t can_0x120_ECU_Engine_RPM_and_others_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x121_ECU_Engine_Torque_Info_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x128_ABS_MTC_Control_Info_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x129_ECU_Gear_Pos_Clutch_Switch_636_time_stamp_rx;
	dbcc_time_stamp_t can_0x12a_ABS_Status_A612_time_stamp_rx;
	dbcc_time_stamp_t can_0x12d_ABS_Wheel_and_Display_Speed_time_stamp_rx;
	dbcc_time_stamp_t can_0x12e_ABS_WSS_DTC_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x12f_ABS_Angle_Information_time_stamp_rx;
	dbcc_time_stamp_t can_0x140_HBS_Status_time_stamp_rx;
	dbcc_time_stamp_t can_0x170_ABS_DRS_RxlD0_time_stamp_rx;
	dbcc_time_stamp_t can_0x174_LAS_DRS_TxlD1_time_stamp_rx;
	dbcc_time_stamp_t can_0x178_LAS_DRS_TxlD2_time_stamp_rx;
	dbcc_time_stamp_t can_0x17c_LAS_DRS_TxlD3_6D_Sensor_time_stamp_rx;
	dbcc_time_stamp_t can_0x290_ABS_Pressure_Info_619_time_stamp_rx;
	dbcc_time_stamp_t can_0x310_TPMS_Info_time_stamp_rx;
	dbcc_time_stamp_t can_0x400_ECU_SAC_Control_time_stamp_rx;
	dbcc_time_stamp_t can_0x410_SAC_Status_time_stamp_rx;
	dbcc_time_stamp_t can_0x450_DASH_Meter_Info_A612_time_stamp_rx;
	dbcc_time_stamp_t can_0x4e8_ECU_Handshake_time_stamp_rx;
	dbcc_time_stamp_t can_0x4e9_ELOCK_Handshake_time_stamp_rx;
	dbcc_time_stamp_t can_0x4ea_ELOCK_Status_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x540_ECU_Engine_Data_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x541_DASH_Engine_Data_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x550_MCU_Status_A612_time_stamp_rx;
	dbcc_time_stamp_t can_0x551_DASH_Driv_Sens_Req_A612x_time_stamp_rx;
	dbcc_time_stamp_t can_0x552_DASH_Light_Sens_Safety_time_stamp_rx;
	dbcc_time_stamp_t can_0x560_MCU_Heating_time_stamp_rx;
	dbcc_time_stamp_t can_0x590_LCU_Status_time_stamp_rx;
	dbcc_time_stamp_t can_0x5a0_ABS_Feature_Control_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x5a1_HLU_Feature_Control_time_stamp_rx;
	dbcc_time_stamp_t can_0x5a2_CCU_Feature_Control_time_stamp_rx;
	dbcc_time_stamp_t can_0x5b0_ECU_Feature_Control_time_stamp_rx;
	dbcc_time_stamp_t can_0x5b1_SCU_Feature_Control_time_stamp_rx;
	dbcc_time_stamp_t can_0x5d0_SCU_Status_Message_A612_time_stamp_rx;
	dbcc_time_stamp_t can_0x5d1_DASH_Suspension_Req_A612_time_stamp_rx;
	dbcc_time_stamp_t can_0x650_HLU_Status_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x6b9_CCU_Status_617_time_stamp_rx;
	dbcc_time_stamp_t can_0x6e2_MCU_Feature_Control_time_stamp_rx;
	unsigned can_0x120_ECU_Engine_RPM_and_others_617_status : 2;
	unsigned can_0x120_ECU_Engine_RPM_and_others_617_tx : 1;
	unsigned can_0x120_ECU_Engine_RPM_and_others_617_rx : 1;
	unsigned can_0x121_ECU_Engine_Torque_Info_617_status : 2;
	unsigned can_0x121_ECU_Engine_Torque_Info_617_tx : 1;
	unsigned can_0x121_ECU_Engine_Torque_Info_617_rx : 1;
	unsigned can_0x128_ABS_MTC_Control_Info_617_status : 2;
	unsigned can_0x128_ABS_MTC_Control_Info_617_tx : 1;
	unsigned can_0x128_ABS_MTC_Control_Info_617_rx : 1;
	unsigned can_0x129_ECU_Gear_Pos_Clutch_Switch_636_status : 2;
	unsigned can_0x129_ECU_Gear_Pos_Clutch_Switch_636_tx : 1;
	unsigned can_0x129_ECU_Gear_Pos_Clutch_Switch_636_rx : 1;
	unsigned can_0x12a_ABS_Status_A612_status : 2;
	unsigned can_0x12a_ABS_Status_A612_tx : 1;
	unsigned can_0x12a_ABS_Status_A612_rx : 1;
	unsigned can_0x12d_ABS_Wheel_and_Display_Speed_status : 2;
	unsigned can_0x12d_ABS_Wheel_and_Display_Speed_tx : 1;
	unsigned can_0x12d_ABS_Wheel_and_Display_Speed_rx : 1;
	unsigned can_0x12e_ABS_WSS_DTC_617_status : 2;
	unsigned can_0x12e_ABS_WSS_DTC_617_tx : 1;
	unsigned can_0x12e_ABS_WSS_DTC_617_rx : 1;
	unsigned can_0x12f_ABS_Angle_Information_status : 2;
	unsigned can_0x12f_ABS_Angle_Information_tx : 1;
	unsigned can_0x12f_ABS_Angle_Information_rx : 1;
	unsigned can_0x140_HBS_Status_status : 2;
	unsigned can_0x140_HBS_Status_tx : 1;
	unsigned can_0x140_HBS_Status_rx : 1;
	unsigned can_0x170_ABS_DRS_RxlD0_status : 2;
	unsigned can_0x170_ABS_DRS_RxlD0_tx : 1;
	unsigned can_0x170_ABS_DRS_RxlD0_rx : 1;
	unsigned can_0x174_LAS_DRS_TxlD1_status : 2;
	unsigned can_0x174_LAS_DRS_TxlD1_tx : 1;
	unsigned can_0x174_LAS_DRS_TxlD1_rx : 1;
	unsigned can_0x178_LAS_DRS_TxlD2_status : 2;
	unsigned can_0x178_LAS_DRS_TxlD2_tx : 1;
	unsigned can_0x178_LAS_DRS_TxlD2_rx : 1;
	unsigned can_0x17c_LAS_DRS_TxlD3_6D_Sensor_status : 2;
	unsigned can_0x17c_LAS_DRS_TxlD3_6D_Sensor_tx : 1;
	unsigned can_0x17c_LAS_DRS_TxlD3_6D_Sensor_rx : 1;
	unsigned can_0x290_ABS_Pressure_Info_619_status : 2;
	unsigned can_0x290_ABS_Pressure_Info_619_tx : 1;
	unsigned can_0x290_ABS_Pressure_Info_619_rx : 1;
	unsigned can_0x310_TPMS_Info_status : 2;
	unsigned can_0x310_TPMS_Info_tx : 1;
	unsigned can_0x310_TPMS_Info_rx : 1;
	unsigned can_0x400_ECU_SAC_Control_status : 2;
	unsigned can_0x400_ECU_SAC_Control_tx : 1;
	unsigned can_0x400_ECU_SAC_Control_rx : 1;
	unsigned can_0x410_SAC_Status_status : 2;
	unsigned can_0x410_SAC_Status_tx : 1;
	unsigned can_0x410_SAC_Status_rx : 1;
	unsigned can_0x450_DASH_Meter_Info_A612_status : 2;
	unsigned can_0x450_DASH_Meter_Info_A612_tx : 1;
	unsigned can_0x450_DASH_Meter_Info_A612_rx : 1;
	unsigned can_0x4e8_ECU_Handshake_status : 2;
	unsigned can_0x4e8_ECU_Handshake_tx : 1;
	unsigned can_0x4e8_ECU_Handshake_rx : 1;
	unsigned can_0x4e9_ELOCK_Handshake_status : 2;
	unsigned can_0x4e9_ELOCK_Handshake_tx : 1;
	unsigned can_0x4e9_ELOCK_Handshake_rx : 1;
	unsigned can_0x4ea_ELOCK_Status_617_status : 2;
	unsigned can_0x4ea_ELOCK_Status_617_tx : 1;
	unsigned can_0x4ea_ELOCK_Status_617_rx : 1;
	unsigned can_0x540_ECU_Engine_Data_617_status : 2;
	unsigned can_0x540_ECU_Engine_Data_617_tx : 1;
	unsigned can_0x540_ECU_Engine_Data_617_rx : 1;
	unsigned can_0x541_DASH_Engine_Data_617_status : 2;
	unsigned can_0x541_DASH_Engine_Data_617_tx : 1;
	unsigned can_0x541_DASH_Engine_Data_617_rx : 1;
	unsigned can_0x550_MCU_Status_A612_status : 2;
	unsigned can_0x550_MCU_Status_A612_tx : 1;
	unsigned can_0x550_MCU_Status_A612_rx : 1;
	unsigned can_0x551_DASH_Driv_Sens_Req_A612x_status : 2;
	unsigned can_0x551_DASH_Driv_Sens_Req_A612x_tx : 1;
	unsigned can_0x551_DASH_Driv_Sens_Req_A612x_rx : 1;
	unsigned can_0x552_DASH_Light_Sens_Safety_status : 2;
	unsigned can_0x552_DASH_Light_Sens_Safety_tx : 1;
	unsigned can_0x552_DASH_Light_Sens_Safety_rx : 1;
	unsigned can_0x560_MCU_Heating_status : 2;
	unsigned can_0x560_MCU_Heating_tx : 1;
	unsigned can_0x560_MCU_Heating_rx : 1;
	unsigned can_0x590_LCU_Status_status : 2;
	unsigned can_0x590_LCU_Status_tx : 1;
	unsigned can_0x590_LCU_Status_rx : 1;
	unsigned can_0x5a0_ABS_Feature_Control_617_status : 2;
	unsigned can_0x5a0_ABS_Feature_Control_617_tx : 1;
	unsigned can_0x5a0_ABS_Feature_Control_617_rx : 1;
	unsigned can_0x5a1_HLU_Feature_Control_status : 2;
	unsigned can_0x5a1_HLU_Feature_Control_tx : 1;
	unsigned can_0x5a1_HLU_Feature_Control_rx : 1;
	unsigned can_0x5a2_CCU_Feature_Control_status : 2;
	unsigned can_0x5a2_CCU_Feature_Control_tx : 1;
	unsigned can_0x5a2_CCU_Feature_Control_rx : 1;
	unsigned can_0x5b0_ECU_Feature_Control_status : 2;
	unsigned can_0x5b0_ECU_Feature_Control_tx : 1;
	unsigned can_0x5b0_ECU_Feature_Control_rx : 1;
	unsigned can_0x5b1_SCU_Feature_Control_status : 2;
	unsigned can_0x5b1_SCU_Feature_Control_tx : 1;
	unsigned can_0x5b1_SCU_Feature_Control_rx : 1;
	unsigned can_0x5d0_SCU_Status_Message_A612_status : 2;
	unsigned can_0x5d0_SCU_Status_Message_A612_tx : 1;
	unsigned can_0x5d0_SCU_Status_Message_A612_rx : 1;
	unsigned can_0x5d1_DASH_Suspension_Req_A612_status : 2;
	unsigned can_0x5d1_DASH_Suspension_Req_A612_tx : 1;
	unsigned can_0x5d1_DASH_Suspension_Req_A612_rx : 1;
	unsigned can_0x650_HLU_Status_617_status : 2;
	unsigned can_0x650_HLU_Status_617_tx : 1;
	unsigned can_0x650_HLU_Status_617_rx : 1;
	unsigned can_0x6b9_CCU_Status_617_status : 2;
	unsigned can_0x6b9_CCU_Status_617_tx : 1;
	unsigned can_0x6b9_CCU_Status_617_rx : 1;
	unsigned can_0x6e2_MCU_Feature_Control_status : 2;
	unsigned can_0x6e2_MCU_Feature_Control_tx : 1;
	unsigned can_0x6e2_MCU_Feature_Control_rx : 1;
	can_0x120_ECU_Engine_RPM_and_others_617_t can_0x120_ECU_Engine_RPM_and_others_617;
	can_0x121_ECU_Engine_Torque_Info_617_t can_0x121_ECU_Engine_Torque_Info_617;
	can_0x128_ABS_MTC_Control_Info_617_t can_0x128_ABS_MTC_Control_Info_617;
	can_0x129_ECU_Gear_Pos_Clutch_Switch_636_t can_0x129_ECU_Gear_Pos_Clutch_Switch_636;
	can_0x12a_ABS_Status_A612_t can_0x12a_ABS_Status_A612;
	can_0x12d_ABS_Wheel_and_Display_Speed_t can_0x12d_ABS_Wheel_and_Display_Speed;
	can_0x12e_ABS_WSS_DTC_617_t can_0x12e_ABS_WSS_DTC_617;
	can_0x12f_ABS_Angle_Information_t can_0x12f_ABS_Angle_Information;
	can_0x140_HBS_Status_t can_0x140_HBS_Status;
	can_0x170_ABS_DRS_RxlD0_t can_0x170_ABS_DRS_RxlD0;
	can_0x174_LAS_DRS_TxlD1_t can_0x174_LAS_DRS_TxlD1;
	can_0x178_LAS_DRS_TxlD2_t can_0x178_LAS_DRS_TxlD2;
	can_0x17c_LAS_DRS_TxlD3_6D_Sensor_t can_0x17c_LAS_DRS_TxlD3_6D_Sensor;
	can_0x290_ABS_Pressure_Info_619_t can_0x290_ABS_Pressure_Info_619;
	can_0x310_TPMS_Info_t can_0x310_TPMS_Info;
	can_0x400_ECU_SAC_Control_t can_0x400_ECU_SAC_Control;
	can_0x410_SAC_Status_t can_0x410_SAC_Status;
	can_0x450_DASH_Meter_Info_A612_t can_0x450_DASH_Meter_Info_A612;
	can_0x4e8_ECU_Handshake_t can_0x4e8_ECU_Handshake;
	can_0x4e9_ELOCK_Handshake_t can_0x4e9_ELOCK_Handshake;
	can_0x4ea_ELOCK_Status_617_t can_0x4ea_ELOCK_Status_617;
	can_0x540_ECU_Engine_Data_617_t can_0x540_ECU_Engine_Data_617;
	can_0x541_DASH_Engine_Data_617_t can_0x541_DASH_Engine_Data_617;
	can_0x550_MCU_Status_A612_t can_0x550_MCU_Status_A612;
	can_0x551_DASH_Driv_Sens_Req_A612x_t can_0x551_DASH_Driv_Sens_Req_A612x;
	can_0x552_DASH_Light_Sens_Safety_t can_0x552_DASH_Light_Sens_Safety;
	can_0x560_MCU_Heating_t can_0x560_MCU_Heating;
	can_0x590_LCU_Status_t can_0x590_LCU_Status;
	can_0x5a0_ABS_Feature_Control_617_t can_0x5a0_ABS_Feature_Control_617;
	can_0x5a1_HLU_Feature_Control_t can_0x5a1_HLU_Feature_Control;
	can_0x5a2_CCU_Feature_Control_t can_0x5a2_CCU_Feature_Control;
	can_0x5b0_ECU_Feature_Control_t can_0x5b0_ECU_Feature_Control;
	can_0x5b1_SCU_Feature_Control_t can_0x5b1_SCU_Feature_Control;
	can_0x5d0_SCU_Status_Message_A612_t can_0x5d0_SCU_Status_Message_A612;
	can_0x5d1_DASH_Suspension_Req_A612_t can_0x5d1_DASH_Suspension_Req_A612;
	can_0x650_HLU_Status_617_t can_0x650_HLU_Status_617;
	can_0x6b9_CCU_Status_617_t can_0x6b9_CCU_Status_617;
	can_0x6e2_MCU_Feature_Control_t can_0x6e2_MCU_Feature_Control;
} POSTPACK can_obj_ktm_a612_h_t;

int unpack_message(can_obj_ktm_a612_h_t *o, const unsigned long id, uint64_t data, uint8_t dlc, dbcc_time_stamp_t time_stamp);
int pack_message(can_obj_ktm_a612_h_t *o, const unsigned long id, uint64_t *data);
int print_message(const can_obj_ktm_a612_h_t *o, const unsigned long id, FILE *output);

int decode_can_0x120_ECU_Engine_Rpm(const can_obj_ktm_a612_h_t *o, uint16_t *out);
int encode_can_0x120_ECU_Engine_Rpm(can_obj_ktm_a612_h_t *o, uint16_t in);
int decode_can_0x120_ECU_Accel_Position(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x120_ECU_Accel_Position(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x120_ECU_CRC_120(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_CRC_120(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Drive_Mode_Response(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Drive_Mode_Response(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Alive_Counter_120(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Alive_Counter_120(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Accel_Position_Validit(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Accel_Position_Validit(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Kill_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Kill_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Starter_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Starter_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Engine_Rpm_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Engine_Rpm_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x120_ECU_Kill_Switch_Malf_Warni(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x120_ECU_Kill_Switch_Malf_Warni(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x121_ECU_Eng_Actual_Torque(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x121_ECU_Eng_Actual_Torque(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x121_ECU_Eng_Driver_Request_Torque(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x121_ECU_Eng_Driver_Request_Torque(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x121_ECU_CRC_121(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_CRC_121(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_Alive_Counter_121(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_Alive_Counter_121(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_Crank(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_Crank(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_Fi_Trq_control_by_MTC(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_Fi_Trq_control_by_MTC(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_MTC_Trq_Req_Refused(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_MTC_Trq_Req_Refused(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_MTC_Failure(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_MTC_Failure(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_Eng_Driv_Torq_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_Eng_Driv_Torq_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_Eng_Act_Trq_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_Eng_Act_Trq_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_FI_TRQ_control_by_DTC(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_FI_TRQ_control_by_DTC(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_DTC_Trq_Req_Refused(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_DTC_Trq_Req_Refused(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_DTC_Failure(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_DTC_Failure(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_EGS_Dwn_Trq_Exec(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_EGS_Dwn_Trq_Exec(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x121_ECU_EGS_Up_Trq_Exec(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x121_ECU_EGS_Up_Trq_Exec(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x128_ABS_MTC_Req_Eng_Trq(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x128_ABS_MTC_Req_Eng_Trq(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x128_ABS_DTC_Req_Eng_Trq(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x128_ABS_DTC_Req_Eng_Trq(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x128_ABS_CRC_128(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x128_ABS_CRC_128(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x128_ABS_Alive_Counter_128(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x128_ABS_Alive_Counter_128(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x128_ABS_MTC_Trq_Cont_Mode(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x128_ABS_MTC_Trq_Cont_Mode(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x128_ABS_MTC_Mode_Change_Permis(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x128_ABS_MTC_Mode_Change_Permis(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x128_ABS_EGS_Enable_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x128_ABS_EGS_Enable_Info(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x129_ECU_CC_Target_Speed(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x129_ECU_CC_Target_Speed(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x129_ECU_CRC_129(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_CRC_129(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Gear_Position(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Gear_Position(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Alive_Counter_129(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Alive_Counter_129(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_CC_Target_Speed_Symbol(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_CC_Target_Speed_Symbol(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_CC_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_CC_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Gear_Engaged(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Gear_Engaged(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Gear_Position_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Gear_Position_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Clutch_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Clutch_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Quickshifter_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Quickshifter_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x129_ECU_Quickshifter_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x129_ECU_Quickshifter_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x12a_ABS_CRC_12A(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_CRC_12A(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_Slip_Adjuster_Value(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_Slip_Adjuster_Value(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_ABS_State(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_ABS_State(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_MTC_State(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_MTC_State(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_TC_Mode_Response(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_TC_Mode_Response(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_Alive_Counter_12A(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_Alive_Counter_12A(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_System_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_System_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_ABS_Mode_Response(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_ABS_Mode_Response(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_AWM_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_AWM_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_LC_Condition(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_LC_Condition(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_LC_Count_Down(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_LC_Count_Down(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_BTM_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_BTM_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_MSR_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_MSR_Info(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_ABS_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_ABS_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_ABS_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_ABS_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_ABS_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_ABS_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_MTC_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_MTC_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_MTC_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_MTC_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_MTC_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_MTC_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_CABS_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_CABS_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12a_ABS_HHC_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12a_ABS_HHC_Status(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x12d_ABS_Front_Wheel_Speed(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12d_ABS_Front_Wheel_Speed(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12d_ABS_Rear_Wheel_Speed(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12d_ABS_Rear_Wheel_Speed(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12d_ABS_Display_Front_Wheel_Speed(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12d_ABS_Display_Front_Wheel_Speed(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12d_ABS_Display_Rear_Wheel_Speed(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12d_ABS_Display_Rear_Wheel_Speed(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12d_ABS_CRC_12D(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12d_ABS_CRC_12D(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12d_ABS_Alive_Counter_12D(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12d_ABS_Alive_Counter_12D(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12d_ABS_Front_Wheel_Speed_Val(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12d_ABS_Front_Wheel_Speed_Val(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12d_ABS_Rear_Wheel_Speed_Val(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12d_ABS_Rear_Wheel_Speed_Val(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x12e_ABS_CRC_12E(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_CRC_12E(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_Alive_Counter_12E(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_Alive_Counter_12E(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Front_DTC_Type(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Front_DTC_Type(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Rear_DTC_Type(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Rear_DTC_Type(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Front_Plausi_Test(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Front_Plausi_Test(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Rear_Plausi_Test(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Rear_Plausi_Test(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Front_Ohmic_Tested(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Front_Ohmic_Tested(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12e_ABS_WSS_Rear_Ohmic_Tested(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12e_ABS_WSS_Rear_Ohmic_Tested(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x12f_ABS_Lean_Angle(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12f_ABS_Lean_Angle(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12f_ABS_Pitch_Info(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x12f_ABS_Pitch_Info(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x12f_ABS_CRC_12F(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_CRC_12F(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12f_ABS_Alive_Counter_12F(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_Alive_Counter_12F(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12f_ABS_Pitch_Info_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_Pitch_Info_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12f_ABS_Lean_Angle_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_Lean_Angle_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12f_ABS_Roll_Over(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_Roll_Over(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x12f_ABS_Roll_Over_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x12f_ABS_Roll_Over_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x140_HBS_Brightness_Response(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Brightness_Response(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Custom_Right_2_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Custom_Right_2_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Custom_Right_1_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Custom_Right_1_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Indicator_Right_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Indicator_Right_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Indicator_Off_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Indicator_Off_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Indicator_Left_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Indicator_Left_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_High_Beam_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_High_Beam_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Horn_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Horn_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Paddle_DOWN_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Paddle_DOWN_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Paddle_UP_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Paddle_UP_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_CC_On_Off_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_CC_On_Off_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Back_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Back_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Center_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Center_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Down_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Down_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Up_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Up_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Left_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Left_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x140_HBS_Right_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x140_HBS_Right_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x170_ABS_Request_1(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Request_1(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_Request_3(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Request_3(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_Request_4(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Request_4(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_Ptr_Diag(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Ptr_Diag(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_CRC_170(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_CRC_170(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_Request_2(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Request_2(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x170_ABS_Msg_Cnt(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x170_ABS_Msg_Cnt(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x174_LAS_Psip1_Yaw_Rate(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x174_LAS_Psip1_Yaw_Rate(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x174_LAS_Ay1(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x174_LAS_Ay1(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x174_LAS_Psip1_Ext_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_Psip1_Ext_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x174_LAS_CRC_174(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_CRC_174(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x174_LAS_Clu_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_Clu_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x174_LAS_Psip1_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_Psip1_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x174_LAS_Msg_Cnt_174(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_Msg_Cnt_174(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x174_LAS_Ay1_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x174_LAS_Ay1_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x178_LAS_Psip3_Roll_Rate(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x178_LAS_Psip3_Roll_Rate(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x178_LAS_Ax1(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x178_LAS_Ax1(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x178_LAS_Clu_Diag(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_Clu_Diag(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x178_LAS_CRC_178(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_CRC_178(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x178_LAS_Clu_Stat5(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_Clu_Stat5(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x178_LAS_Psip3v_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_Psip3v_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x178_LAS_Msg_Cnt_178(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_Msg_Cnt_178(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x178_LAS_Ax1_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x178_LAS_Ax1_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x17c_LAS_Psip2_Pitch_Rate(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x17c_LAS_Psip2_Pitch_Rate(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x17c_LAS_Az_Vertical_Acc(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x17c_LAS_Az_Vertical_Acc(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x17c_LAS_CRC_17C(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x17c_LAS_CRC_17C(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x17c_LAS_HW_Index(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x17c_LAS_HW_Index(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x17c_LAS_Pitch_Rate_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x17c_LAS_Pitch_Rate_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x17c_LAS_Msg_Cnt_17C(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x17c_LAS_Msg_Cnt_17C(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x17c_LAS_Az_Stat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x17c_LAS_Az_Stat(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x290_ABS_Front_Wheel_Press(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x290_ABS_Front_Wheel_Press(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x290_ABS_Front_Master_Cyl(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x290_ABS_Front_Master_Cyl(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x290_ABS_Rear_Wheel_Press(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x290_ABS_Rear_Wheel_Press(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x290_ABS_Rear_Master_Cyl(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x290_ABS_Rear_Master_Cyl(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x290_ABS_CRC_290(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_CRC_290(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x290_ABS_Alive_Counter_290(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_Alive_Counter_290(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x290_ABS_Rear_Master_Cyl_Valid(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_Rear_Master_Cyl_Valid(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x290_ABS_Front_Master_Cyl_Valid(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_Front_Master_Cyl_Valid(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x290_ABS_Rear_Wheel_Press_Valid(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_Rear_Wheel_Press_Valid(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x290_ABS_Front_Wheel_Press_Vali(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x290_ABS_Front_Wheel_Press_Vali(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x310_TPMS_Pressure_Front(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x310_TPMS_Pressure_Front(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x310_TPMS_Pressure_Rear(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x310_TPMS_Pressure_Rear(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x310_TPMS_Temperature_Front(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x310_TPMS_Temperature_Front(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x310_TPMS_Temperature_Rear(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x310_TPMS_Temperature_Rear(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x310_TPMS_Press_FR_Low_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Press_FR_Low_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Press_FR_High_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Press_FR_High_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Puncture_FR_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Puncture_FR_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Bat_Stat_FR_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Bat_Stat_FR_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_General_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_General_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Fr_Sens_Missing_Warni(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Fr_Sens_Missing_Warni(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Press_RE_Low_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Press_RE_Low_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Press_RE_High_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Press_RE_High_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Puncture_RE_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Puncture_RE_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Bat_Stat_RE_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Bat_Stat_RE_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x310_TPMS_Re_Sens_Missing_Warni(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x310_TPMS_Re_Sens_Missing_Warni(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x400_ECU_Target_Opening(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_Target_Opening(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x400_ECU_CRC_400(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_CRC_400(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x400_ECU_Alive_Counter_400(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_Alive_Counter_400(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x400_ECU_Actuator_Driv_Stop(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_Actuator_Driv_Stop(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x400_ECU_Cranking_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_Cranking_Info(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x400_ECU_EXB_Init_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x400_ECU_EXB_Init_Info(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x410_SAC_Present_Opening(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Present_Opening(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Present_Position(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x410_SAC_Present_Position(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x410_SAC_Close_Position(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x410_SAC_Close_Position(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x410_SAC_Open_Position(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x410_SAC_Open_Position(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x410_SAC_Target_Position(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x410_SAC_Target_Position(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x410_SAC_CRC_410(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_CRC_410(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Alive_Counter_410(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Alive_Counter_410(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Wire_Adj_Loose(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Wire_Adj_Loose(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Communication_Failure(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Communication_Failure(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Sensor_Stuck_Detection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Sensor_Stuck_Detection(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Diag_Conn_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Diag_Conn_Info(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Under_Exec_Info(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Under_Exec_Info(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Normal_Operation(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Normal_Operation(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Wire_Adj_Tight(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Wire_Adj_Tight(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Wire_Breaking_In_Motor(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Wire_Breaking_In_Motor(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Motor_Locking(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Motor_Locking(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Sensor_Failure(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Sensor_Failure(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Excess_Heat_Detection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Excess_Heat_Detection(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Excess_Load_Detection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Excess_Load_Detection(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Excess_Volt_Detection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Excess_Volt_Detection(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x410_SAC_Low_Voltage_Detection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x410_SAC_Low_Voltage_Detection(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x450_DASH_Ambient_Temp(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x450_DASH_Ambient_Temp(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x450_DASH_Variant(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_Variant(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_TC_Mode_Request(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_TC_Mode_Request(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_ABS_Mode_Request(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_ABS_Mode_Request(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_Slip_Adj_Up_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_Slip_Adj_Up_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_Slip_Adj_Down_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_Slip_Adj_Down_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_LC_Release(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_LC_Release(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_AWM_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_AWM_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_MTC_Off_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_MTC_Off_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_HHC_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_HHC_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x450_DASH_Ambient_Temp_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x450_DASH_Ambient_Temp_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x4e8_ECU_Handshake(const can_obj_ktm_a612_h_t *o, uint64_t *out);
int encode_can_0x4e8_ECU_Handshake(can_obj_ktm_a612_h_t *o, uint64_t in);


int decode_can_0x4e9_ELOCK_Handshake(const can_obj_ktm_a612_h_t *o, uint64_t *out);
int encode_can_0x4e9_ELOCK_Handshake(can_obj_ktm_a612_h_t *o, uint64_t in);


int decode_can_0x4ea_ELOCK_Key_Bat_Low_Warn(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x4ea_ELOCK_Key_Bat_Low_Warn(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x4ea_ELOCK_Key_Missing_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x4ea_ELOCK_Key_Missing_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x4ea_ELOCK_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x4ea_ELOCK_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x4ea_ELOCK_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x4ea_ELOCK_LED(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x540_ECU_Fuel_Consumption(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x540_ECU_Fuel_Consumption(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x540_ECU_Water_Temperature(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x540_ECU_Water_Temperature(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x540_ECU_Oil_Temp_Sensor_Data(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x540_ECU_Oil_Temp_Sensor_Data(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x540_ECU_Low_Oil_Level_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Low_Oil_Level_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_General_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_General_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Side_Stand(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Side_Stand(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Transport_Lock_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Transport_Lock_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Trans_Temp_Unlock_Warn(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Trans_Temp_Unlock_Warn(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Malfunction_Indica_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Malfunction_Indica_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Water_Temperature_Vali(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Water_Temperature_Vali(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x540_ECU_Side_Stand_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x540_ECU_Side_Stand_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x541_DASH_After_Start_Time(const can_obj_ktm_a612_h_t *o, uint16_t *out);
int encode_can_0x541_DASH_After_Start_Time(can_obj_ktm_a612_h_t *o, uint16_t in);
int decode_can_0x541_DASH_Restart_Time(const can_obj_ktm_a612_h_t *o, uint16_t *out);
int encode_can_0x541_DASH_Restart_Time(can_obj_ktm_a612_h_t *o, uint16_t in);
int decode_can_0x541_DASH_CRC_541(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_CRC_541(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Drive_Mode_Request(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Drive_Mode_Request(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Alive_Counter_541(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Alive_Counter_541(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Tank_Reserve(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Tank_Reserve(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Speed_Measure_Unit(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Speed_Measure_Unit(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Quickshifter_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Quickshifter_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Cc_Set_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Cc_Set_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Cc_Resume_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Cc_Resume_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Cc_Master_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Cc_Master_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Cc_Button_Selection(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Cc_Button_Selection(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_After_Start_Time_Vali(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_After_Start_Time_Vali(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x541_DASH_Restart_Time_Validity(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x541_DASH_Restart_Time_Validity(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x550_MCU_Battery_Voltage(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x550_MCU_Battery_Voltage(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x550_MCU_CRC_550(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_CRC_550(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Fuel_Level_Sensor_Data(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Fuel_Level_Sensor_Data(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Alive_Counter_550(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Alive_Counter_550(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_General_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_General_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Horn_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Horn_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Oil_Pressure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Oil_Pressure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Front_Brake_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Front_Brake_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Rear_Brake_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Rear_Brake_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Blinker_Left_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Blinker_Left_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Blinker_Right_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Blinker_Right_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Blinker_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Blinker_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Battery_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Battery_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Radiator_Fan_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Radiator_Fan_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Fuel_Pump_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Fuel_Pump_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Oil_Pressure_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Oil_Pressure_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Brake_Lamp_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Brake_Lamp_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Front_Brake_Switch_War(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Front_Brake_Switch_War(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Rear_Brake_Switch_Warn(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Rear_Brake_Switch_Warn(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Cruise_Control_Cancel(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Cruise_Control_Cancel(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x550_MCU_Cruise_Contr_Not_Canc(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x550_MCU_Cruise_Contr_Not_Canc(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x551_DASH_Odo_Meter(const can_obj_ktm_a612_h_t *o, double *out);
int encode_can_0x551_DASH_Odo_Meter(can_obj_ktm_a612_h_t *o, double in);
int decode_can_0x551_DASH_Curve_Light_Test_Requ(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Curve_Light_Test_Requ(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Grip_Heat_Level_Req(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Grip_Heat_Level_Req(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Rider_Heat_Level_Req(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Rider_Heat_Level_Req(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_HBS_Brightness_Reques(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_HBS_Brightness_Reques(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_DRL_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_DRL_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Grip_Installation(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Grip_Installation(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Pillion_Heat_Installa(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Pillion_Heat_Installa(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Rider_Heat_Installati(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Rider_Heat_Installati(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_Corded_Headset_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_Corded_Headset_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x551_DASH_BT_Switch(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x551_DASH_BT_Switch(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x552_DASH_Day_Night_Light_Sens_Safety(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x552_DASH_Day_Night_Light_Sens_Safety(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x552_DASH_CRC_552(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x552_DASH_CRC_552(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x552_DASH_Alive_Counter_552(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x552_DASH_Alive_Counter_552(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x560_MCU_Grip_Heat_Level_Res(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Grip_Heat_Level_Res(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Pillion_Heat_Level(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Pillion_Heat_Level(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Rider_Heat_Level_Res(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Rider_Heat_Level_Res(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Grip_Heat_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Grip_Heat_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Pillion_Heat_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Pillion_Heat_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Pillion_Heat_Sw_Warnin(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Pillion_Heat_Sw_Warnin(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x560_MCU_Rider_Heat_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x560_MCU_Rider_Heat_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x590_LCU_Curve_Light_Test_Respo(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x590_LCU_Curve_Light_Test_Respo(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x590_LCU_General_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x590_LCU_General_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x590_LCU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x590_LCU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5a0_ABS_CRC_5A0(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_CRC_5A0(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Drive_Mode_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Drive_Mode_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Mode_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Mode_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_TC_MTC_Mode_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_TC_MTC_Mode_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Alive_Counter_5A0(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Alive_Counter_5A0(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_RSC_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_RSC_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_MSR_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_MSR_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_HHC_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_HHC_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_AWM_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_AWM_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_CurveABS_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_CurveABS_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_BTM_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_BTM_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Slip_Adjuster_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Slip_Adjuster_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_MOM_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_MOM_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Cruise_Control_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Cruise_Control_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_HBS_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_HBS_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Launch_Control_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Launch_Control_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a0_ABS_Immo_Bit(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a0_ABS_Immo_Bit(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5a1_HLU_CRC_5A1(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a1_HLU_CRC_5A1(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a1_HLU_Alive_Counter_5A1(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a1_HLU_Alive_Counter_5A1(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a1_HLU_Curve_Light_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a1_HLU_Curve_Light_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a1_HLU_DRL_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a1_HLU_DRL_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5a2_CCU_TbT_Navigation_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_TbT_Navigation_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Call_In_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Call_In_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Music_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Music_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Compass_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Compass_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_6D_Sensor_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_6D_Sensor_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_2nd_Headset_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_2nd_Headset_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Call_Out_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Call_Out_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_RCM_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_RCM_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_TbT_Plus_Navi_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_TbT_Plus_Navi_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Corded_Headset_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Corded_Headset_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Map_Navigation_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Map_Navigation_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5a2_CCU_Interface_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5a2_CCU_Interface_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5b0_ECU_CRC_5B0(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_CRC_5B0(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b0_ECU_Drive_Mode_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_Drive_Mode_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b0_ECU_Alive_Counter_5B0(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_Alive_Counter_5B0(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b0_ECU_Quickshifter_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_Quickshifter_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b0_ECU_Oil_Temp_Lev_Sens_Feat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_Oil_Temp_Lev_Sens_Feat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b0_ECU_Cruise_Control_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b0_ECU_Cruise_Control_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5b1_SCU_CRC_5B1(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_CRC_5B1(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Alive_Counter_5B1(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Alive_Counter_5B1(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Antidive_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Antidive_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Auto_Damp_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Auto_Damp_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Ext_Damp_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Ext_Damp_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Offroad_Damp_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Offroad_Damp_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_EDS_Preload_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_EDS_Preload_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Race_Damp_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Race_Damp_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Manual_Preload_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Manual_Preload_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5b1_SCU_Auto_Preload_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5b1_SCU_Auto_Preload_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5d0_SCU_Preload_Resp(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_Preload_Resp(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d0_SCU_Damp_Shock_Mode_Resp(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_Damp_Shock_Mode_Resp(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d0_SCU_Damp_Fork_Mode_Resp(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_Damp_Fork_Mode_Resp(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d0_SCU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d0_SCU_Suspension_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_Suspension_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d0_SCU_Preload_Adjuster_Warn(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d0_SCU_Preload_Adjuster_Warn(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x5d1_DASH_Preload_Req(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d1_DASH_Preload_Req(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d1_DASH_Damp_Shock_Mode_Req(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d1_DASH_Damp_Shock_Mode_Req(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x5d1_DASH_Damp_Fork_Mode_Req(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x5d1_DASH_Damp_Fork_Mode_Req(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x650_HLU_DRL_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_DRL_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_DRL_Active(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_DRL_Active(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_High_Beam_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_High_Beam_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_Low_Beam_Active(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_Low_Beam_Active(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_High_Beam_Lamp_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_High_Beam_Lamp_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_Low_Beam_Lamp_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_Low_Beam_Lamp_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_DRL_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_DRL_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_Front_Pos_Lamp_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_Front_Pos_Lamp_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x650_HLU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x650_HLU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x6b9_CCU_BT_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_BT_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_General_Failure_LED(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_General_Failure_LED(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_General_Warning(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_General_Warning(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_MD_Symbol(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_MD_Symbol(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_Headset2_Symbol(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_Headset2_Symbol(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_Headset1_Symbol(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_Headset1_Symbol(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_Corded_Headset_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_Corded_Headset_Status(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6b9_CCU_BT_Status(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6b9_CCU_BT_Status(can_obj_ktm_a612_h_t *o, uint8_t in);


int decode_can_0x6e2_MCU_CRC_6E2(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6e2_MCU_CRC_6E2(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6e2_MCU_Alive_Counter_6E2(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6e2_MCU_Alive_Counter_6E2(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6e2_MCU_Lightdiag_Deact_Feat(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6e2_MCU_Lightdiag_Deact_Feat(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6e2_MCU_ATI_Reset_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6e2_MCU_ATI_Reset_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);
int decode_can_0x6e2_MCU_ESI_Feature(const can_obj_ktm_a612_h_t *o, uint8_t *out);
int encode_can_0x6e2_MCU_ESI_Feature(can_obj_ktm_a612_h_t *o, uint8_t in);


#ifdef __cplusplus
} 
#endif

#endif
